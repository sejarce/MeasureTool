// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: YZMFile.proto

#ifndef PROTOBUF_YZMFile_2eproto__INCLUDED
#define PROTOBUF_YZMFile_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "YZMMeasureDocument.pb.h"
#include "YZMPointCloud.pb.h"
// @@protoc_insertion_point(includes)
namespace yzm {
class MeasureDocument;
class MeasureDocumentDefaultTypeInternal;
extern MeasureDocumentDefaultTypeInternal _MeasureDocument_default_instance_;
class PointCloud;
class PointCloudDefaultTypeInternal;
extern PointCloudDefaultTypeInternal _PointCloud_default_instance_;
class Vertex;
class VertexDefaultTypeInternal;
extern VertexDefaultTypeInternal _Vertex_default_instance_;
class YZMFile;
class YZMFileDefaultTypeInternal;
extern YZMFileDefaultTypeInternal _YZMFile_default_instance_;
}  // namespace yzm

namespace yzm {

namespace protobuf_YZMFile_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_YZMFile_2eproto

// ===================================================================

class YZMFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:yzm.YZMFile) */ {
 public:
  YZMFile();
  virtual ~YZMFile();

  YZMFile(const YZMFile& from);

  inline YZMFile& operator=(const YZMFile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YZMFile& default_instance();

  static inline const YZMFile* internal_default_instance() {
    return reinterpret_cast<const YZMFile*>(
               &_YZMFile_default_instance_);
  }

  void Swap(YZMFile* other);

  // implements Message ----------------------------------------------

  inline YZMFile* New() const PROTOBUF_FINAL { return New(NULL); }

  YZMFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const YZMFile& from);
  void MergeFrom(const YZMFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(YZMFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .yzm.MeasureDocument document = 1;
  bool has_document() const;
  void clear_document();
  static const int kDocumentFieldNumber = 1;
  const ::yzm::MeasureDocument& document() const;
  ::yzm::MeasureDocument* mutable_document();
  ::yzm::MeasureDocument* release_document();
  void set_allocated_document(::yzm::MeasureDocument* document);

  // .yzm.PointCloud point_cloud = 2;
  bool has_point_cloud() const;
  void clear_point_cloud();
  static const int kPointCloudFieldNumber = 2;
  const ::yzm::PointCloud& point_cloud() const;
  ::yzm::PointCloud* mutable_point_cloud();
  ::yzm::PointCloud* release_point_cloud();
  void set_allocated_point_cloud(::yzm::PointCloud* point_cloud);

  // @@protoc_insertion_point(class_scope:yzm.YZMFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::yzm::MeasureDocument* document_;
  ::yzm::PointCloud* point_cloud_;
  mutable int _cached_size_;
  friend struct  protobuf_YZMFile_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// YZMFile

// .yzm.MeasureDocument document = 1;
inline bool YZMFile::has_document() const {
  return this != internal_default_instance() && document_ != NULL;
}
inline void YZMFile::clear_document() {
  if (GetArenaNoVirtual() == NULL && document_ != NULL) delete document_;
  document_ = NULL;
}
inline const ::yzm::MeasureDocument& YZMFile::document() const {
  // @@protoc_insertion_point(field_get:yzm.YZMFile.document)
  return document_ != NULL ? *document_
                         : *::yzm::MeasureDocument::internal_default_instance();
}
inline ::yzm::MeasureDocument* YZMFile::mutable_document() {
  
  if (document_ == NULL) {
    document_ = new ::yzm::MeasureDocument;
  }
  // @@protoc_insertion_point(field_mutable:yzm.YZMFile.document)
  return document_;
}
inline ::yzm::MeasureDocument* YZMFile::release_document() {
  // @@protoc_insertion_point(field_release:yzm.YZMFile.document)
  
  ::yzm::MeasureDocument* temp = document_;
  document_ = NULL;
  return temp;
}
inline void YZMFile::set_allocated_document(::yzm::MeasureDocument* document) {
  delete document_;
  document_ = document;
  if (document) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yzm.YZMFile.document)
}

// .yzm.PointCloud point_cloud = 2;
inline bool YZMFile::has_point_cloud() const {
  return this != internal_default_instance() && point_cloud_ != NULL;
}
inline void YZMFile::clear_point_cloud() {
  if (GetArenaNoVirtual() == NULL && point_cloud_ != NULL) delete point_cloud_;
  point_cloud_ = NULL;
}
inline const ::yzm::PointCloud& YZMFile::point_cloud() const {
  // @@protoc_insertion_point(field_get:yzm.YZMFile.point_cloud)
  return point_cloud_ != NULL ? *point_cloud_
                         : *::yzm::PointCloud::internal_default_instance();
}
inline ::yzm::PointCloud* YZMFile::mutable_point_cloud() {
  
  if (point_cloud_ == NULL) {
    point_cloud_ = new ::yzm::PointCloud;
  }
  // @@protoc_insertion_point(field_mutable:yzm.YZMFile.point_cloud)
  return point_cloud_;
}
inline ::yzm::PointCloud* YZMFile::release_point_cloud() {
  // @@protoc_insertion_point(field_release:yzm.YZMFile.point_cloud)
  
  ::yzm::PointCloud* temp = point_cloud_;
  point_cloud_ = NULL;
  return temp;
}
inline void YZMFile::set_allocated_point_cloud(::yzm::PointCloud* point_cloud) {
  delete point_cloud_;
  point_cloud_ = point_cloud;
  if (point_cloud) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:yzm.YZMFile.point_cloud)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace yzm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_YZMFile_2eproto__INCLUDED
